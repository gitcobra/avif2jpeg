(function(){"use strict";console.log("running converter.worker.canvas");const z=new OffscreenCanvas(100,100),x=z.getContext("bitmaprenderer");let g;const v=new Map;self.onmessage=async c=>{const{ports:e}=c;if(e[0]){g=e[0],g.onmessage=T;return}const r=c.data;for(const t of r)await P(t);self.postMessage({action:"list-end"})};async function P(c){const{index:e,file:r,fileId:t,type:d,quality:p,demandThumbnail:m,isSingleImage:M,webkitRelativePath:u,maxSize:f}=c,o=u||r.webkitRelativePath||r.name,b=r.size;let a;a={action:"file-start",path:o,fileId:t,index:e},self.postMessage(a);let l,s,i;try{if(l=await createImageBitmap(r),{width:s,height:i}=l,f){const n=s/i;let{width:B,height:k}=f,w={};s>B&&(s=B,i=s/n,w={resizeWidth:s}),i>k&&(i=k,s=i*n,w={resizeHeight:i}),l=await createImageBitmap(l,{resizeQuality:"high",...w})}}catch(n){console.error("error occurred on canvas worker",t,o,n),a={action:"file-error",path:o,fileId:t,index:e},self.postMessage(a);return}let y=null;if(m){const n=s>i?{resizeWidth:110}:{resizeHeight:80};y=await createImageBitmap(l,{...n,resizeQuality:"low"})}x.transferFromImageBitmap(l),a={action:"file-load",fileId:t,path:o,index:e,thumbnail:y,width:s,height:i},self.postMessage(a);let h;try{h=await z.convertToBlob({type:d,quality:p})}catch(n){console.error("error occurred while converting",t,o,n),a={action:"file-error",path:o,fileId:t,index:e},self.postMessage(a);return}const I=h.size;g.postMessage({blob:h,path:o,fileId:t}),a={action:"file-converted",path:o,fileId:t,index:e,outputsize:I,inputsize:b,width:s,height:i},self.postMessage(a),v.set(t,{outputsize:I,inputsize:b,path:o,index:e})}const T=c=>{const{fileId:e,renamed:r,outputPath:t,canceled:d}=c.data,{inputsize:p,outputsize:m,path:M,index:u}=v.get(e),f={action:d?"file-canceled":"file-completed",fileId:e,path:M,index:u,inputsize:p,outputsize:m};self.postMessage(f)}})();
