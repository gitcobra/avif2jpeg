(function(){"use strict";function F(l,t,e,i){return new(e||(e=Promise))(function(r,a){function o(u){try{c(i.next(u))}catch(n){a(n)}}function s(u){try{c(i.throw(u))}catch(n){a(n)}}function c(u){var n;u.done?r(u.value):(n=u.value,n instanceof e?n:new e(function(h){h(n)})).then(o,s)}c((i=i.apply(l,[])).next())})}typeof SuppressedError=="function"&&SuppressedError;const M=new Blob([Uint8Array.from([80,75,3,4,10,0,0,8,0,0])]),O=new Blob([Uint8Array.from([80,75,1,2,10,0,10,0,0,8,0,0])]),Z=new Blob([Uint8Array.from([0,0,0,0,0,0,0,0,0,0])]),j=new Blob([Uint8Array.from([0,0,0,0,0,0,16,0,0,0])]),P=new TextEncoder;class A{constructor(){this.clear()}clear(){this._dirRecords=new Map,this._dirRecList=[],this._dirRecFileList=[],this._localFileChunks=[],this._curLocalFileHeaderOffset=0,this._centralDirHeaderChunks=[],this._centralDirHeaderLen=0,this._pathCount=0,this._fileCount=0,this._dataSize=0,this._zippedBlob=null,this._isPending=!1,this._resolvingCRCPromise=null}add(t,e,i,r){if(this._zippedBlob)throw new Error("the AnZip object was already zipped. create a new instance or execute clear() before adding a file.");if(!t)throw new Error("path is empty");if(t=String(t).replace(/\\/g,"/").replace(/^\//,""),/\/{2,}|\\|^\/|^[a-z]+:/i.test(t))throw new Error('invalid path. containing a drive letter, a leading slash, or empty directory name: "'+t+'"');let a=0,o=0,s=null;if(e!==void 0){if(!/[^/]+$/.test(t))throw new Error('needs a file name: "'+t+'"');if(this.has(t))throw new Error('the path already exists: "'+t+'"');if(e instanceof Blob)s=e,a=e.size;else{if(e instanceof Uint8Array||typeof Buffer=="function"&&e instanceof Buffer)s=e;else if(typeof e=="string")s=P.encode(e);else{if(!(e instanceof ArrayBuffer||e instanceof Array))throw new Error("data must be one of the following types Array, TypedArray, ArrayBuffer, Buffer, string, or Blob.");s=new Uint8Array(e)}o=x(s),a=s.length}}let c=null;i instanceof Date?c=i:i===void 0||i===-1?c=new Date:i>0&&(c=new Date(i));const u=c?m(c.getFullYear()-1980<<25|c.getMonth()+1<<21|c.getDate()<<16|c.getHours()<<11|c.getMinutes()<<5|c.getSeconds()/2):[0,0,0,0];let n,h,b,y=t.replace(/\/+$/,"").split("/"),z="";for(;y.length;){z+=y.shift();const g=!!(e&&y.length===0);if(z+=g?"":"/",this._dirRecords.has(z))continue;const p=P.encode(z),C=p.length,S=g&&a?m(a):[0,0,0,0],L={offset:this._curLocalFileHeaderOffset,size:a,path:z,pathLength:C,isFile:g};this._dirRecords.set(z,L),this._dirRecList.push(L),g&&this._dirRecFileList.push(L),this._pathCount++,n=Uint8Array.from(u.concat(g?m(o):[0,0,0,0],S,S,[255&C,C>>8&255,0,0])),h=[M,n,p],this._localFileChunks.push(h);const $=g?Z:j,T=Uint8Array.from(m(this._curLocalFileHeaderOffset));this._centralDirHeaderChunks.push([O,n,$,T,p]),this._centralDirHeaderLen+=46+C,this._curLocalFileHeaderOffset+=30+C+(g?a:0)}return s&&(s instanceof Blob?b=this._resolveBlobCRC(s,n,t):r&&(s=new Blob([s])),h.push(s),this._dataSize+=a,this._fileCount++),b}_resolveBlobCRC(t,e,i){var r;return F(this,void 0,void 0,function*(){const a=this._resolvingCRCPromise;let o;const s=new Promise(n=>o=n);this._resolvingCRCPromise=s,this._isPending=!0;const c=((r=t.arrayBuffer)===null||r===void 0?void 0:r.call(t))||new Promise(n=>{const h=new FileReader;h.onload=()=>{n(h.result)},h.readAsArrayBuffer(t)});yield a;let u=!1;return c.then(n=>{const h=x(new Uint8Array(n));new DataView(e.buffer).setUint32(4,h,!0),u=!0}).catch(n=>{throw this.remove(i),new Error(`${n.message}
could not resolve the blob CRC.`)}).finally(()=>{this._resolvingCRCPromise===s&&(this._isPending=!1),o(u)}),s})}_checkPending(){if(this._isPending)throw new Error("the AnZip object is still pending. execute wait() and await the fulfillment of the Promise beforehand.")}_getFileRecord(t){let e;return typeof t=="string"?e=this._dirRecords.get(t):typeof t=="number"&&(e=this._dirRecFileList[t]),e||null}has(t){return!!this._dirRecords.has(t.replace(/\/+$/,""))}size(){return this._dataSize}count(t){return t?this._pathCount:this._fileCount}get(t,e){let i=this._getFileRecord(t);if(i&&i.isFile){if(this._zippedBlob){const{offset:r,size:a,pathLength:o}=i,s=r+o+30;return this._zippedBlob.slice(s,s+a,e)}{const r=this._dirRecList.indexOf(i),a=this._localFileChunks[r][3];return typeof e!="string"||a instanceof Blob&&(!e||a.type===e)?a:new Blob([a],{type:e})}}return null}getPathByIndex(t){var e;return((e=this._dirRecFileList[t])===null||e===void 0?void 0:e.path)||""}remove(t){if(this._zippedBlob)throw new Error(`could not remove the file. the AnZip object is already zipped. ${t}`);const e=this._getFileRecord(t);if(!e||!e.isFile)return!1;const i=this._dirRecList.indexOf(e);this._localFileChunks.splice(i,1)[0],this._centralDirHeaderChunks.splice(i,1)[0];const r=30+e.pathLength+e.size;this._curLocalFileHeaderOffset-=r;const a=46+e.pathLength;this._centralDirHeaderLen-=a;for(let o=i;o<this._centralDirHeaderChunks.length;o++){const s=this._centralDirHeaderChunks[o][3],c=new DataView(s.buffer),u=c.getUint32(0,!0);c.setUint32(0,u-r,!0)}return this._pathCount--,this._fileCount--,this._dataSize-=e.size,this._dirRecords.delete(e.path),this._dirRecFileList.splice(this._dirRecFileList.indexOf(e),1),this._dirRecList.splice(this._dirRecList.indexOf(e),1),!0}list(t){const e=[];for(const[i,r]of this._dirRecords)(t||r.isFile)&&e.push({path:r.path,size:r.size,isFile:r.isFile});return e}buffer(){return this.wait().then(()=>{var t;const e=this._buildZipBlob();return((t=e.arrayBuffer)===null||t===void 0?void 0:t.call(e))||new Promise(i=>{const r=new FileReader;r.onload=()=>{i(r.result)},r.readAsArrayBuffer(e)})})}blob(){return this._checkPending(),this._buildZipBlob()}url(){return this._checkPending(),URL.createObjectURL(this._buildZipBlob())}wait(t){return F(this,void 0,void 0,function*(){const e=this._resolvingCRCPromise;if(!e)return Promise.resolve();yield e})}_buildZipBlob(){if(this._zippedBlob)return this._zippedBlob;const t=new Uint8Array([].concat([80,75,5,6,0,0,0,0,255&this._pathCount,this._pathCount>>8,255&this._pathCount,this._pathCount>>8],m(this._centralDirHeaderLen),m(this._curLocalFileHeaderOffset),[0,0]));let e=[];return e=e.concat(...this._localFileChunks,...this._centralDirHeaderChunks,t),new Blob(e,{type:"application/zip"})}zip(t){if(!this._zippedBlob){if(t)return this.wait().then(()=>this.zip());this._checkPending();const e=this._buildZipBlob();this._zippedBlob=e,this._localFileChunks=[],this._centralDirHeaderChunks=[]}return this._zippedBlob}}const U=new Uint32Array(256);for(let l=0;l<256;l++){let t=l;for(let e=0;e<8;e++)t=1&t?3988292384^t>>>1:t>>>1;U[l]=t}function x(l){let t=4294967295;for(let e=0,i=l.length;e<i;e++)t=U[255&(t^l[e])]^t>>>8;return(4294967295^t)>>>0}function m(l){return[255&l,l>>8&255,l>>16&255,l>>24&255]}console.log("converter.worker.zip started");const k=[],f=[];let d=new A;k.push(d);let _=0,w=0,D=!1,B=1024*1024*1024,H=!1,R="",E="";self.onmessage=async l=>{const{data:{action:t,zipSize:e,keepExt:i,outputExt:r,file:a,index:o,path:s,imageType:c},ports:u}=l;switch(console.log("zipworker: "+t),t){case"set-port":{const n=u[0];n.onmessage=h=>q(h,n);return}case"set-config":B=e,H=!!i,R=r||"",E=c||"";break;case"squeeze":D=!0,setTimeout(()=>v("squeeze-zip"),10);break;case"clear":d.clear(),w=0,_=0;break;case"add-filelist":{_>=B&&v("push-filelist-zip"),await d.add(s,a)&&(_+=a.size,w++);let h={action:"push-filelist",size:_,count:w};self.postMessage(h);break}case"squeeze-filelist":await new Promise(n=>setTimeout(n,10)),v("squeeze-filelist-zip");break;case"request-image":{let n=d,h=o;for(let p=0;p<f.length;p++){if(o<=f[p]-1){h=p>0?o-f[p-1]:o,n=k[p];break}if(p===f.length-1){h=o-f[p];break}}const b=n.get(h,E);b||(console.warn(o,h,b),console.warn(f));const y=n.getPathByIndex(h);let g={action:"respond-image",url:URL.createObjectURL(b),index:o,path:y,size:b.size};self.postMessage(g);break}default:console.error(`zip.worker got an unknown action. "${t}"`);break}};const q=async(l,t)=>{let{data:{blob:e,path:i,fileId:r}}=l;if(D){t.postMessage({fileId:r,canceled:!0});return}i=i.replace(/^\//,""),H||(i=i.replace(/\.(jpe?g|jfif|pjpeg|pjp|gif|png|avif|webp|bmp|apng|ico)$/i,""));const a=2147483647;let o=i+"."+R,s=1;for(;s<=a&&d.has(o);s++){if(s===a)throw new Error(`failed to create valid output path. ${o}`);o=i+"_"+s+"."+R}const c=e.size;_+c>B&&v("push-zip"),_+=c,w++,await d.add(o,e);let u={action:"add-zip-completed",fileId:r};self.postMessage(u),t.postMessage({fileId:r,renamed:s>=2,outputPath:o})};function v(l){console.log("zipworker emitZIP: "+B,l);let t;try{const i=d,r=w,a=_;i.wait().then(()=>i.zip()).then(()=>(t={url:i.url(),action:l,size:a,count:r},new Promise(s=>setTimeout(s,0)))).then(()=>{self.postMessage(t)}).catch(o=>{console.log(o)})}catch(i){console.warn(i.message,l),t={action:l==="squeeze-zip"?"zip-squeeze-error":"zip-error",size:_,count:w},self.postMessage(t)}const e=f.length?f[f.length-1]:0;f.push(d.count()+e),d=new A,k.push(d),w=0,_=0}})();
