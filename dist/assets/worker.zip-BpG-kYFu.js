var K=Object.defineProperty;var N=(w,g,y)=>g in w?K(w,g,{enumerable:!0,configurable:!0,writable:!0,value:y}):w[g]=y;var v=(w,g,y)=>N(w,typeof g!="symbol"?g+"":g,y);(function(){"use strict";function w(n,e,t,i){return new(t||(t=Promise))(function(r,l){function a(h){try{c(i.next(h))}catch(o){l(o)}}function s(h){try{c(i.throw(h))}catch(o){l(o)}}function c(h){var o;h.done?r(h.value):(o=h.value,o instanceof t?o:new t(function(u){u(o)})).then(a,s)}c((i=i.apply(n,[])).next())})}typeof SuppressedError=="function"&&SuppressedError;const g=new Blob([Uint8Array.from([80,75,3,4,10,0,0,8,0,0])]),y=new Blob([Uint8Array.from([80,75,1,2,10,0,10,0,0,8,0,0])]),q=new Blob([Uint8Array.from([0,0,0,0,0,0,0,0,0,0])]),T=new Blob([Uint8Array.from([0,0,0,0,0,0,16,0,0,0])]),U=new TextEncoder;class D{static getCRC32(e){}constructor(){this.clear()}clear(){this._dirRecords=new Map,this._dirRecList=[],this._dirRecFileList=[],this._localFileChunks=[],this._curLocalFileHeaderOffset=0,this._centralDirHeaderChunks=[],this._centralDirHeaderLen=0,this._pathCount=0,this._fileCount=0,this._dataSize=0,this._zippedBlob=null,this._resolvingCRCPromise=null}add(e,t,i,r){if(this._zippedBlob)throw new Error("the AnZip object was already zipped. create a new instance or execute clear() before adding a file.");if(!e)throw new Error("path is empty");if(e=String(e).replace(/\\/g,"/").replace(/^\//,""),/\/{2,}|\\|^\/|^[a-z]+:/i.test(e))throw new Error('invalid path. containing a drive letter, a leading slash, or empty directory name: "'+e+'"');let l,a=0,s=null;if(t!==void 0){if(!/[^/]+$/.test(e))throw new Error('needs a file name: "'+e+'"');if(this.has(e))throw new Error('the path already exists: "'+e+'"');if(r!==void 0){if(typeof r!="number")throw new Error("precalculatedCRC must be a number");l=r}if(t instanceof Blob)s=t,a=t.size,l===void 0&&(l=0);else{if(t instanceof Uint8Array||typeof Buffer=="function"&&t instanceof Buffer)s=t;else if(typeof t=="string")s=U.encode(t);else{if(!(t instanceof ArrayBuffer||t instanceof Array))throw new Error("data must be one of the following types Array, TypedArray, ArrayBuffer, Buffer, string, or Blob.");s=new Uint8Array(t)}l===void 0&&(l=H(s)),a=s.byteLength}}let c=null;i instanceof Date?c=i:i===void 0||i===-1?c=new Date:i>=0&&(c=new Date(i));const h=c?C(c.getFullYear()-1980<<25|c.getMonth()+1<<21|c.getDate()<<16|c.getHours()<<11|c.getMinutes()<<5|c.getSeconds()/2):[0,0,0,0];let o,u,p,d=e.replace(/\/+$/,"").split("/"),f="";for(;d.length;){f+=d.shift();const m=!!(t&&d.length===0);if(f+=m?"":"/",this._dirRecords.has(f))continue;const B=U.encode(f),R=B.length,$=m&&a?C(a):[0,0,0,0],S={offset:this._curLocalFileHeaderOffset,size:a,path:f,pathLength:R,isFile:m};this._dirRecords.set(f,S),this._dirRecList.push(S),m&&this._dirRecFileList.push(S),this._pathCount++,o=Uint8Array.from([].concat(h,m?C(l):[0,0,0,0],$,$,[255&R,R>>8&255,0,0])),u=[g,o,B],this._localFileChunks.push(u);const G=m?q:T,J=Uint8Array.from(C(this._curLocalFileHeaderOffset));this._centralDirHeaderChunks.push([y,o,G,J,B]),this._centralDirHeaderLen+=46+R,this._curLocalFileHeaderOffset+=30+R+(m?a:0)}s&&(r===void 0&&s instanceof Blob&&(p=this._resolveBlobCRC(s,o,e)),u.push(s),this._dataSize+=a,this._fileCount++);let L=this._pathCount;return(p||Promise.resolve()).then(()=>L)}_resolveBlobCRC(e,t,i){let r,l;const a=this._resolvingCRCPromise||Promise.resolve(),s=new Promise((h,o)=>{r=h,l=o});this._resolvingCRCPromise=s;let c=!1;return a.finally(()=>{(function(h){return M(h).then(o=>H(new Uint8Array(o)))})(e).then(h=>{new DataView(t.buffer).setUint32(4,h,!0),c=!0}).catch(h=>{throw this.remove(i),new Error(`${h.message}
could not resolve the blob CRC.`)}).finally(()=>{this._resolvingCRCPromise===s&&(this._resolvingCRCPromise=null),c?r():l()})}),s}_checkPending(){if(this._resolvingCRCPromise)throw new Error("the AnZip object is still pending. execute wait() and await the fulfillment of the Promise beforehand.")}_getFileRecord(e){let t;return typeof e=="string"?t=this._dirRecords.get(e):typeof e=="number"&&(t=this._dirRecFileList[e]),t||null}has(e){return!!this._dirRecords.has(e.replace(/\/+$/,""))}size(){return this._dataSize}count(e){return e?this._pathCount:this._fileCount}get(e,t){const i=this._getFileRecord(e);if(i&&i.isFile){if(this._zippedBlob){const{offset:r,size:l,pathLength:a}=i,s=r+a+30;return this._zippedBlob.slice(s,s+l,t)}{const r=this._dirRecList.indexOf(i),l=this._localFileChunks[r][3];return typeof t!="string"||l instanceof Blob&&(!t||l.type===t)?l:new Blob([l],{type:t})}}return null}getPathByIndex(e){var t;return((t=this._dirRecFileList[e])===null||t===void 0?void 0:t.path)||""}remove(e){if(this._zippedBlob)throw new Error(`could not remove the file. the AnZip object is already zipped. ${e}`);const t=this._getFileRecord(e);if(!t||!t.isFile)return!1;const i=this._dirRecList.indexOf(t);this._localFileChunks.splice(i,1)[0],this._centralDirHeaderChunks.splice(i,1)[0];const r=30+t.pathLength+t.size;this._curLocalFileHeaderOffset-=r;const l=46+t.pathLength;this._centralDirHeaderLen-=l;for(let a=i;a<this._centralDirHeaderChunks.length;a++){const s=this._centralDirHeaderChunks[a][3],c=new DataView(s.buffer).getUint32(0,!0);this._centralDirHeaderChunks[a][3]=Uint8Array.from(C(c-r))}return this._pathCount--,this._fileCount--,this._dataSize-=t.size,this._dirRecords.delete(t.path),this._dirRecFileList.splice(this._dirRecFileList.indexOf(t),1),this._dirRecList.splice(this._dirRecList.indexOf(t),1),!0}list(e){const t=[];for(const[i,r]of this._dirRecords)(e||r.isFile)&&t.push({path:r.path,size:r.size,isFile:r.isFile});return t}buffer(){return this.zip().then(e=>M(e))}blob(){return this.zip()}url(){return this.zip().then(e=>URL.createObjectURL(e))}urlSync(){return URL.createObjectURL(this.zipSync())}wait(e){return w(this,void 0,void 0,function*(){for(;this._resolvingCRCPromise&&(yield this._resolvingCRCPromise,e););})}_buildZipBlob(e){return new Blob(e||this._createCurrentBlobParts(),{type:"application/zip"})}_createCurrentBlobParts(){const e=new Uint8Array([].concat([80,75,5,6,0,0,0,0,255&this._pathCount,this._pathCount>>8,255&this._pathCount,this._pathCount>>8],C(this._centralDirHeaderLen),C(this._curLocalFileHeaderOffset),[0,0]));let t=[];return t=t.concat(...this._localFileChunks,...this._centralDirHeaderChunks,e),t}zip(e){return w(this,void 0,void 0,function*(){if(this._zippedBlob)return this._zippedBlob;const t=this._createCurrentBlobParts();yield this._resolvingCRCPromise;const i=this._buildZipBlob(t);return e&&this._close(i),i})}zipSync(e){if(this._zippedBlob)return this._zippedBlob;this._checkPending();const t=this._buildZipBlob(this._createCurrentBlobParts());return e&&this._close(t),t}_close(e){this._zippedBlob=e,this._localFileChunks=[],this._centralDirHeaderChunks=[]}}const E=new Uint32Array(256);for(let n=0;n<256;n++){let e=n;for(let t=0;t<8;t++)e=1&e?3988292384^e>>>1:e>>>1;E[n]=e}function H(n){let e=4294967295;for(let t=0,i=n.length;t<i;t++)e=E[255&(e^n[t])]^e>>>8;return(4294967295^e)>>>0}function M(n){var e;return((e=n.arrayBuffer)===null||e===void 0?void 0:e.call(n))||new Promise(t=>{let i=new FileReader;i.onload=r=>{t(r.target.result)},i.onerror=()=>{throw new Error("could not read it as ArrayBuffer")},i.readAsArrayBuffer(n),i=null})}function C(n){return[255&n,n>>8&255,n>>16&255,n>>24&255]}class V{constructor(){v(this,"_currentFileCount",0);v(this,"_currentZipIndex",0);v(this,"_totalFileCount",0);v(this,"_zipLengthSumList",[]);v(this,"_pathBank",{})}increase(e){return e&&(this._pathBank[e]=[this._zipLengthSumList.length,this._currentFileCount]),this._currentFileCount++,this._totalFileCount++}split(){this._zipLengthSumList.push(this._totalFileCount),this._currentZipIndex++,this._currentFileCount=0}get(e){if(typeof e=="number"){let t=this._zipLengthSumList.findIndex((l,a)=>e<l);t===-1&&(t=this._zipLengthSumList.length);const i=this._zipLengthSumList[t-1]||0,r=e-i;return[t,r]}else{const t=this._pathBank[String(e)];if(t)return t}return null}getZipIndex(){return this._currentZipIndex}getIndex(){return this._totalFileCount}}function W(n){return new Promise(e=>setTimeout(e,n))}console.log("converter.worker.zip started");const F=[];let X=0;const A=new Map,k=new V;let _=new D;F.push(_);let z=0,b=0,Z=!1,x=1024*1024*1024,O=!1,I="",j="";self.onmessage=async n=>{const{data:{action:e,zipSize:t,keepExt:i,outputExt:r,file:l,index:a,path:s,imageType:c},ports:h}=n;switch(console.log("zipworker: "+e),e){case"set-config":x=t,O=!!i,I=r||"",j=c||"",self.postMessage({action:"respond-set-config"});break;case"set-port-loader":{const o=h[0];self.postMessage({action:"respond-to-first-message"}),o.onmessage=u=>{const{data:{action:p},ports:d}=u;if(p==="set-port-canvas"){const f=d[0];f.onmessage=L=>Y(L,f),console.log("set-port-canvas")}};return}case"squeeze":Z=!0,await _.wait(),P("squeeze-zip");break;case"clear":_.clear(),b=0,z=0;break;case"add-filelist":{z>=x&&P("push-filelist-zip");let o=!1;if(await _.add(s,l).catch(p=>{console.error(p),o=!0}),o){const p={action:"error-push-filelist-zip",path:s};self.postMessage(p);break}z+=l.size,b++;let u={action:"push-filelist",size:z,count:b};self.postMessage(u);break}case"squeeze-filelist":await _.wait(),P("squeeze-filelist-zip");break;case"request-image":{const[o,u]=k.get(a),p=F[o],d=u,f=p.get(d,j);if(!f){console.warn(a,d,f);break}const L=p.getPathByIndex(d);let B={action:"respond-image",url:URL.createObjectURL(f),index:a,path:L,fileId:A.get(a),size:f.size};self.postMessage(B);break}case"delete-image":{let o=!1;try{const[p,d]=k.get(a);F[p].remove(d),o=!0}catch(p){console.error(p.message)}const u={action:"respond-delete",index:a,success:o,fileId:A.get(a)};self.postMessage(u);break}default:console.error(`zip.worker got an unknown action. "${e}"`);break}};const Y=(n,e)=>{let{data:{blob:t,path:i,fileId:r,crc:l}}=n;if(Z){console.log("canceled zipping the file. process was terminated.",r,i),e.postMessage({fileId:r,canceled:!0});return}i=i.replace(/^\//,""),O||(i=i.replace(/\.(jpe?g|jfif|pjpeg|pjp|gif|png|avif|webp|bmp|apng|ico)$/i,""));const a=2147483647;let s=i+"."+I,c=1;for(;c<=a&&_.has(s);c++){if(c===a)throw new Error(`failed to create valid output path. ${s}`);s=i+"_"+c+"."+I}const h=t.size;z+h>x&&P("push-zip"),z+=h,b++;const o=X++;A.set(o,r),k.increase(),_.add(s,t,void 0);let u={action:"add-zip-completed",fileId:r,entireIndex:o,storedPath:s};self.postMessage(u),e.postMessage({canceled:!1,fileId:r,renamed:c>=2,outputPath:s,storedPath:s,entireIndex:o})};function P(n){console.log("zipworker emitZIP: "+x,n);let e;try{const t=_,i=b,r=z;t.zip(!0).then(()=>t.url()).then(async l=>{await W(0),e={url:l,action:n,size:r,count:i},self.postMessage(e)})}catch(t){console.error(t.message,n),console.error("count:",b),e={action:n==="squeeze-zip"?"zip-squeeze-error":"zip-error",size:z,count:b},self.postMessage(e)}_=new D,F.push(_),k.split(),b=0,z=0}})();
