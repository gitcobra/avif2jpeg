var he=Object.defineProperty;var pe=(m,i,k)=>i in m?he(m,i,{enumerable:!0,configurable:!0,writable:!0,value:k}):m[i]=k;var W=(m,i,k)=>pe(m,typeof i!="symbol"?i+"":i,k);(function(){"use strict";function m(e){return new Worker("/avif2jpeg/dist/assets/worker.canvas-B1IXZh7n.js",{name:e==null?void 0:e.name})}let i=0;class k extends m{constructor(s){super();W(this,"id",i++);W(this,"priority");this.priority=s||!1}release(){y(this)}}class J extends Promise{constructor(){super(...arguments);W(this,"wid",-1)}}const _=new Set,g=new Set,w=new Set,M=new Map,H=[];function ee(e){const t=new k;return _.add(t),O(t,e),y(t),e&&H.push(t.id),t}function O(e,t){const s=t?w:g,o=new J(n=>{M.set(e,()=>n([e,o,!!t]))});o.wid=e.id,s.add(o)}async function te(e){let t;if(!e)t=new Set([...w,...g]);else if(typeof e=="number"){const l=H.slice(0,e);t=new Set([...w].filter(d=>l.includes(d.wid)))}else t=e?w:g;const[s,o,n]=await Promise.any(t);return(n?w:g).delete(o),O(s,n),s}function y(e){const t=M.get(e);if(!t){console.warn("the worker was already released.",e.id);return}M.delete(e),t(),h==null||h(),h=null}function se(){for(const e of M.keys())y(e)}async function B(){return await Promise.all([...g,...w])}let X,h=null;async function oe(){h||(X=new Promise(e=>h=e)),await X}function ne(){se();for(const e of _)e.onmessage=null,e.terminate();_.clear(),g.clear(),w.clear(),M.clear(),i=0}function re(e){return new Promise(t=>setTimeout(t,e))}const G=1,U=2e3*2e3*5,ae=5,ie=1,le=U*6,ce=100;let V,a;const S=new Map,Z=new Map,P=new Map;let p=0,C=!1,E=0,L=0;self.onmessage=async e=>{const{data:t,ports:s}=e,{action:o}=t;switch(o){case"set-zip-port":{V=s[0],self.postMessage({action:"respond-to-first-message"});break}case"start-convert":{const{list:n,fileIdList:l,outputType:d,outputQuality:A,threads:Y,maxSize:z}=t;n.forEach((T,D)=>T._id=l[D]),de(n,d,A,Y,z);break}case"cancel-convert":C=!0;break}};async function de(e,t,s,o,n){a=e;const l=Math.max(1,Math.min(o-3,a.length)),d=Math.min(ae,l);fe(l,d);const A=async()=>{for(let c=1;!C&&p>le;c++){if(console.log("overloaded ","index:",r," totalChunkSize:",p," counter:",c),c>9999)throw new Error(`maybe totalChunkSize is deadlocked :${p}`);await oe()}},z=a.length===1;let T=0,D="",r=0;for(;r<a.length;r++){const c=[];let R=!1;const me=a.length-r;Math.min(r+Math.max(Math.min(ie,me/o|0),1),a.length);let N=0,x=!1;const f=a[r],u=f._id,b=f.webkitRelativePath||f.name,we=P.get(u);if(x=x||!!we,R=r===a.length-1,E++,I("file-start",r,b,u),C){I("file-canceled",r,b,u);continue}let v;try{v=await createImageBitmap(f)}catch{console.error("error occurred while creating a bitmap",u,b),q(r,b,u);continue}if(await A(),C){I("file-canceled",r,b,u);continue}c.push(v);const K=v.width*v.height*4;N+=K+f.size,p+=K+f.size;let F=!1;const Q=Date.now();Q-T>ce&&(T=Q,F=!0);const ke={index:r,bitmap:v,file:f,fileId:u,outputPath:D,type:t,quality:s/100,demandThumbnail:F||R,isSingleImage:z,maxSize:n,retriedTime:P.get(u)||0,webkitRelativePath:f.webkitRelativePath};F=!1;let $;const ge=N>U;$=await te(d>0&&(x?1:ge)),S.set($.id,N),$.postMessage(ke,c),c.length=0,R&&await B()}console.log("end file loop",a.length),console.log("end of totalChunkSize: ",p),await B(),console.log("resolved all workers"),self.postMessage({action:"end-convert"});for(let c=0;E!==L;c++){if(c>50){console.error(`resolvedCount is unequal to startedCount. resolvedCount:${L} startedCount:${E}`);break}await re(100)}self.postMessage({action:"close-loader"}),console.log("successfully close worker.loader."),self.close()}function fe(e,t){ne();for(let s=0;s<e;s++){const o=ee(t>s);o.onmessage=ue;const{port1:n,port2:l}=new MessageChannel;V.postMessage({action:"set-port-canvas"},[n]),o.postMessage({},[l])}}const ue=e=>{const t=e.target,{data:s}=e,{action:o}=s;switch(o){case"file-load":s.workerId=t.id;case"file-converted":case"file-canceled":{self.postMessage(s);break}case"file-completed":{y(t),p-=S.get(t.id)||0,S.delete(t.id),self.postMessage(s);break}case"file-error":{const{index:n,path:l,fileId:d}=s;q(n,l,d);break}case"list-start":case"list-end":case"respond-to-first-message":break;default:console.error(`unexptected action "${o}"`)}j(o)};function I(e,t,s,o){const n={action:e,index:t,path:s,fileId:o};self.postMessage(n),j(e)}function j(e){switch(e){case"file-completed":case"file-canceled":case"file-error":case"file-retry":L++;break}}function q(e,t,s){const o=a[e];if(!o)throw new Error(`the file doesn't exist. "${e}":"${t}"`);const n=Z.get(o._id)||0;n<G?(Z.set(o._id,n+1),a.push(o),P.set(s,Date.now()),I("file-retry",e,t,s)):(console.error(`failed to load "${t}" after ${G} retries. the image may be corrupted or cannot be read by some reason.`),I("file-error",e,t,s))}})();
