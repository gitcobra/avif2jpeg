(function(){"use strict";const z=new OffscreenCanvas(100,100),P=z.getContext("bitmaprenderer");let m;const w=new Map;self.onmessage=async o=>{const{ports:e}=o;if(e[0]){m=e[0],m.onmessage=k;return}const n=o.data;for(const i of n)await T(i);self.postMessage({action:"list-end"})};async function T(o){const{index:e,file:n,fileId:i,type:p,quality:d,demandThumbnail:g,isSingleImage:b,webkitRelativePath:h,maxSize:f}=o,c=h||n.webkitRelativePath||n.name,M=n.size;let s;s={action:"file-start",path:c,fileId:i,index:e},self.postMessage(s);let l,t,a;try{if(l=await createImageBitmap(n),{width:t,height:a}=l,f){const r=t/a;let{width:B,height:x}=f,u={};t>B&&(t=B,a=t/r,u={resizeWidth:t}),a>x&&(a=x,t=a*r,u={resizeHeight:a}),l=await createImageBitmap(l,{resizeQuality:"high",...u})}}catch{s={action:"file-error",path:c,fileId:i,index:e},self.postMessage(s);return}let v=null;if(g){const r=t>a?{resizeWidth:110}:{resizeHeight:80};v=await createImageBitmap(l,{...r,resizeQuality:"low"})}P.transferFromImageBitmap(l),s={action:"file-load",fileId:i,path:c,index:e,thumbnail:v,width:t,height:a},self.postMessage(s);const y=await z.convertToBlob({type:p,quality:d}),I=y.size;m.postMessage({blob:y,path:c,fileId:i}),s={action:"file-converted",path:c,fileId:i,index:e,outputsize:I,inputsize:M,width:t,height:a},self.postMessage(s),w.set(i,{outputsize:I,inputsize:M,path:c,index:e})}const k=o=>{const{fileId:e,renamed:n,outputPath:i,canceled:p}=o.data,{inputsize:d,outputsize:g,path:b,index:h}=w.get(e),f={action:p?"file-canceled":"file-completed",fileId:e,path:b,index:h,inputsize:d,outputsize:g};self.postMessage(f)}})();
