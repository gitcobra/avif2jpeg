(function(){"use strict";const w=new OffscreenCanvas(100,100),P=w.getContext("bitmaprenderer");let p;const M=new Map;self.onmessage=async c=>{const{ports:e}=c;if(e[0]){p=e[0],p.onmessage=k;return}const n=c.data;for(const t of n)await T(t);self.postMessage({action:"list-end"})};async function T(c){const{index:e,file:n,fileId:t,type:m,quality:d,demandThumbnail:g,isSingleImage:b,webkitRelativePath:h,maxSize:f}=c,o=h||n.webkitRelativePath||n.name,v=n.size;let a;a={action:"file-start",path:o,fileId:t,index:e},self.postMessage(a);let l,s,i;try{if(l=await createImageBitmap(n),{width:s,height:i}=l,f){const r=s/i;let{width:B,height:x}=f,z={};s>B&&(s=B,i=s/r,z={resizeWidth:s}),i>x&&(i=x,s=i*r,z={resizeHeight:i}),l=await createImageBitmap(l,{resizeQuality:"high",...z})}}catch{a={action:"file-error",path:o,fileId:t,index:e},self.postMessage(a);return}let y=null;if(g){const r=s>i?{resizeWidth:110}:{resizeHeight:80};y=await createImageBitmap(l,{...r,resizeQuality:"low"})}P.transferFromImageBitmap(l),a={action:"file-load",fileId:t,path:o,index:e,thumbnail:y,width:s,height:i},self.postMessage(a);let u;try{u=await w.convertToBlob({type:m,quality:d})}catch{a={action:"file-error",path:o,fileId:t,index:e},self.postMessage(a);return}const I=u.size;p.postMessage({blob:u,path:o,fileId:t}),a={action:"file-converted",path:o,fileId:t,index:e,outputsize:I,inputsize:v,width:s,height:i},self.postMessage(a),M.set(t,{outputsize:I,inputsize:v,path:o,index:e})}const k=c=>{const{fileId:e,renamed:n,outputPath:t,canceled:m}=c.data,{inputsize:d,outputsize:g,path:b,index:h}=M.get(e),f={action:m?"file-canceled":"file-completed",fileId:e,path:b,index:h,inputsize:d,outputsize:g};self.postMessage(f)}})();
