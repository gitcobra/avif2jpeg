(function(){"use strict";const w=new OffscreenCanvas(100,100),B=w.getContext("bitmaprenderer");let r;const z=new Map;self.onmessage=async n=>{const{ports:e}=n;if(e[0]){r=e[0],r.onmessage=x;return}const i=n.data;for(const t of i)await I(t);self.postMessage({action:"list-end"})};async function I(n){const{index:e,file:i,fileId:t,type:f,quality:d,demandThumbnail:p,demandImage:m,webkitRelativePath:u}=n,a=u||i.webkitRelativePath||i.name,M=i.size;let s;s={action:"file-start",path:a,fileId:t,index:e},self.postMessage(s);let l;try{l=await createImageBitmap(i)}catch{s={action:"file-error",path:a,fileId:t,index:e},self.postMessage(s);return}const{width:g,height:h}=l;let b=null;if(p){const c=g>h?{resizeWidth:110}:{resizeHeight:80};b=await createImageBitmap(l,{...c,resizeQuality:"low"})}B.transferFromImageBitmap(l),s={action:"file-load",fileId:t,path:a,index:e,thumbnail:b,width:g,height:h},self.postMessage(s);const o=await w.convertToBlob({type:f,quality:d}),v=o.size;let y;if(m)y=o;else{const c=await(o==null?void 0:o.arrayBuffer())||null;r.postMessage({data:c,path:a,fileId:t},[c])}s={action:"file-converted",path:a,fileId:t,index:e,outputsize:v,inputsize:M,image:y,width:g,height:h},self.postMessage(s),z.set(t,{outputsize:v,inputsize:M,path:a,index:e})}const x=n=>{const{fileId:e,renamed:i,outputPath:t,canceled:f}=n.data,{inputsize:d,outputsize:p,path:m,index:u}=z.get(e),a={action:f?"file-canceled":"file-completed",fileId:e,path:m,index:u,inputsize:d,outputsize:p};self.postMessage(a)}})();
