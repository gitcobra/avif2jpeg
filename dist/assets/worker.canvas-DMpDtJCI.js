(function(){"use strict";const b=new OffscreenCanvas(100,100),T=b.getContext("bitmaprenderer");let m;const M=new Map;self.onmessage=async o=>{const{ports:e}=o;if(e[0]){m=e[0],m.onmessage=R;return}const n=o.data;for(const i of n)await k(i);self.postMessage({action:"list-end"})};async function k(o){const{index:e,file:n,fileId:i,type:d,quality:p,demandThumbnail:g,demandImage:h,webkitRelativePath:u,maxSize:f}=o,c=u||n.webkitRelativePath||n.name,v=n.size;let s;s={action:"file-start",path:c,fileId:i,index:e},self.postMessage(s);let l,t,a;try{if(l=await createImageBitmap(n),{width:t,height:a}=l,f){const r=t/a;let{width:x,height:P}=f,w={};t>x&&(t=x,a=t/r,w={resizeWidth:t}),a>P&&(a=P,t=a*r,w={resizeHeight:a}),l=await createImageBitmap(l,{resizeQuality:"high",...w})}}catch{s={action:"file-error",path:c,fileId:i,index:e},self.postMessage(s);return}let y=null;if(g){const r=t>a?{resizeWidth:110}:{resizeHeight:80};y=await createImageBitmap(l,{...r,resizeQuality:"low"})}T.transferFromImageBitmap(l),s={action:"file-load",fileId:i,path:c,index:e,thumbnail:y,width:t,height:a},self.postMessage(s);const z=await b.convertToBlob({type:d,quality:p}),B=z.size;let I;h?I=z:m.postMessage({blob:z,path:c,fileId:i}),s={action:"file-converted",path:c,fileId:i,index:e,outputsize:B,inputsize:v,image:I,width:t,height:a},self.postMessage(s),M.set(i,{outputsize:B,inputsize:v,path:c,index:e})}const R=o=>{const{fileId:e,renamed:n,outputPath:i,canceled:d}=o.data,{inputsize:p,outputsize:g,path:h,index:u}=M.get(e),f={action:d?"file-canceled":"file-completed",fileId:e,path:h,index:u,inputsize:p,outputsize:g};self.postMessage(f)}})();
