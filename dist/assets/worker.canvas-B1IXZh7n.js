(function(){"use strict";console.log("running converter.worker.canvas");const c=new OffscreenCanvas(100,100),S=c.getContext("bitmaprenderer");let p;const y=new Map;self.onmessage=async l=>{const{ports:e}=l;if(e[0]){p=e[0],p.onmessage=F,self.postMessage({action:"respond-to-first-message"});return}await C(l.data),self.postMessage({action:"list-end"}),c.width=1,c.height=1};async function C(l){const{index:e,file:h,bitmap:u,fileId:t,type:f,quality:m,demandThumbnail:w,isSingleImage:x,webkitRelativePath:z,maxSize:d}=l,i=z||h.webkitRelativePath||h.name,I=h.size;let n,k=0,B=0,s,a,o,v,b,P=!1;try{if(s=u,{width:a,height:o}=s,k=v=a,B=b=o,d){const r=a/o;let{width:H,height:R}=d,g=null;a>H&&(a=H,o=a/r,g={resizeWidth:a}),o>R&&(o=R,a=o*r,g={resizeHeight:o}),P=!!g,s=await createImageBitmap(s,{resizeQuality:"high",...g||{}}),v=s.width,b=s.height,u.close()}}catch(r){console.error("error occurred on canvas worker",t,i,r),n={action:"file-error",path:i,fileId:t,index:e},self.postMessage(n);return}let T;if(w){const r=a>o?{resizeWidth:110}:{resizeHeight:80};T=await createImageBitmap(s,{...r,resizeQuality:"pixelated"})}S.transferFromImageBitmap(s),s.close(),n={action:"file-load",fileId:t,path:i,index:e,thumbnail:T,width:k,height:B,inputsize:I},self.postMessage(n);let M;try{M=await c.convertToBlob({type:f,quality:m})}catch(r){console.error("error occurred while converting",t,i,r),n={action:"file-error",path:i,fileId:t,index:e},self.postMessage(n);return}const W=M.size;c.width=1,c.height=1,n={action:"file-converted",path:i,fileId:t,index:e,outputsize:W,outputWidth:v,outputHeight:b,shrinked:P},self.postMessage(n),y.set(t,{outputsize:W,inputsize:I,path:i,index:e});const O={blob:M,path:i,fileId:t};p.postMessage(O)}const F=l=>{const{fileId:e,renamed:h,outputPath:u,canceled:t,entireIndex:f,storedPath:m}=l.data,{inputsize:w,outputsize:x,path:z,index:d}=y.get(e),i={action:t?"file-canceled":"file-completed",fileId:e,path:z,index:d,inputsize:w,outputsize:x,entireIndex:f,storedPath:m};self.postMessage(i)}})();
