(function(){"use strict";async function $(i,e,s,r,t){if(r!==!0)try{const a=await i.getFileHandle(e);if(!r||typeof r=="function"&&!await r(a,e,t))return!1}catch(a){if(a.name!=="NotFoundError")throw a}const o=await(await i.getFileHandle(e,{create:!0})).createWritable();return await o.write(s),await o.close(),!0}async function C(i,e,s,r){const t=s===!0;let n;try{if(n=await i.getDirectoryHandle(e,{create:t}),t)return n;if(!s||typeof s=="function"&&!await s(i,e,r))return null}catch(o){if(o.name==="NotFoundError")n=await i.getDirectoryHandle(e,{create:!0});else throw o}return n}const H=new Map;async function R(i,e,s,r){let t=H.get(i);t||(t={},H.set(i,t));const n=[];let o=i,a;const h=typeof e=="string"?e.split("/"):e;a=h.join("/");do{if(t[a]){o=t[a],a+="/";break}n.unshift(h.pop()),a=h.join("/")}while(h.length);for(const c of n){if(!c)throw new Error("folderName is empty");if(o=await C(o,c,s,a),!o)return null;t[a+c]=o,a+=c+"/"}return o}async function N(i,e,s,r){const t=e.split("/"),n=t.pop();if(!n)throw new Error("fileName is empty");const o=t.length?await R(i,t,r):i;return o?await $(o,n,s,r,t.length?t.join("/")+"/":""):!1}function T(i,e){const s=e.replace(/^\s*\/?|\/?\s*$/g,"").split("/");do{const r=s.join("/");if(i.has(r))return;i.add(r),s.pop()}while(s.length)}function L(i,e,s){return s||(i=i.replace(/\.(jpe?g|jfif|pjpeg|pjp|gif|png|avif|webp|bmp|apng|ico)$/i,"")),i+"."+e}const w=new OffscreenCanvas(100,100),Q=w.getContext("bitmaprenderer");let D,y,S;const I=new Map,q=new Set,Z=new Set,z=new Map;let m;self.onmessage=async i=>{const e=i.data;if("port"in e){const{ports:s}=i;if(s[0]){const{port:r,fsysDirHandler:t,existingFolders:n}=e;switch(y=y||t,S=n,r){case"zip":D=s[0],D.onmessage=J,self.postMessage({action:"respond-to-first-message"}),m=void 0;break;default:throw new Error(`unexptected port type ${r}`)}}return}if("action"in e){const{action:s,command:r,fileId:t,path:n,target:o}=e;switch(s){case"respond-overwrite":const a=z.get(n);if(!a)throw new Error(`no resolver exists for overwrite confirmation "${n}"`);z.delete(n),a(r);break}return}await G(e),self.postMessage({action:"list-end"}),w.width=1,w.height=1};async function G(i){const{index:e,file:s,bitmap:r,fileId:t,type:n,quality:o,demandThumbnail:a,isSingleImage:h,webkitRelativePath:c,maxSize:g,keepPrevExt:U,outputExt:V}=i,f=c||s.webkitRelativePath||s.name,M=s.size;let j=0,W=0,u,p,d,P,F,A=!1;try{if(u=r,{width:p,height:d}=u,j=P=p,W=F=d,g){const l=p/d;let{width:v,height:E}=g,x=null;p>v&&(p=v,d=p/l,x={resizeWidth:p}),d>E&&(d=E,p=d*l,x={resizeHeight:d}),A=!!x,u=await createImageBitmap(u,{resizeQuality:"high",...x||{}}),P=u.width,F=u.height,r.close()}}catch{self.postMessage({action:"file-error",path:f,fileId:t,index:e});return}let B;if(a){const l=p>d?{resizeWidth:110}:{resizeHeight:80};B=await createImageBitmap(u,{...l,resizeQuality:"low"})}Q.transferFromImageBitmap(u),u.close(),self.postMessage({action:"file-load",fileId:t,path:f,index:e,thumbnail:B,width:j,height:W,inputsize:M});let b;try{b=await w.convertToBlob({type:n,quality:o})}catch{self.postMessage({action:"file-error",path:f,fileId:t,index:e});return}const k=b.size;if(w.width=1,w.height=1,self.postMessage({action:"file-converted",path:f,fileId:t,index:e,outputsize:k,outputWidth:P,outputHeight:F,shrinked:A}),I.set(t,{outputsize:k,inputsize:M,path:f,index:e}),y){const l=L(f,V,U),v=typeof m=="boolean"?m:K(l,t,e);try{await N(y,l,b,v)?(T(q,l),self.postMessage({action:"file-sys-completed",fileId:t,path:f,index:e,inputsize:M,outputsize:k,entireIndex:e,storedPath:l})):self.postMessage({action:"file-skip",fileId:t,path:f,index:e})}catch{self.postMessage({action:"file-error",fileId:t,path:f,index:e})}}else D.postMessage({blob:b,path:f,fileId:t})}const J=i=>{const{fileId:e,renamed:s,outputPath:r,canceled:t,entireIndex:n,storedPath:o}=i.data,{inputsize:a,outputsize:h,path:c,index:g}=I.get(e);self.postMessage({action:t?"file-canceled":"file-completed",fileId:e,path:c,index:g,inputsize:a,outputsize:h,entireIndex:n,storedPath:o})};function K(i,e,s){return async(r,t,n)=>{const o=r instanceof FileSystemFileHandle,a=n+t;if(!o&&!S.has(a))return!0;switch(await new Promise(c=>{self.postMessage({action:"confirm-overwrite",type:o?"file":"folder",target:n+t,path:i,fileId:e,index:s}),z.set(i,g=>{c(g)})})){case"overwrite-all":m=!0;case"overwrite":return!0;case"skip-all":m=!1;case"close":case"skip":return Z.add(i),!1;default:throw new Error("unexpected OverwriteCommand command")}}}})();
