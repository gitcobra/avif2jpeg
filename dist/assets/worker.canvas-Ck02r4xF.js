(function(){"use strict";const o=new OffscreenCanvas(100,100),x=o.getContext("bitmaprenderer");let l;const h=new Map;self.onmessage=async a=>{const{ports:e}=a;if(e[0]){l=e[0],l.onmessage=k,self.postMessage({action:"respond-to-first-message"});return}const i=a.data;for(const c of i)await I(c);self.postMessage({action:"list-end"}),o.width=1,o.height=1};async function I(a){const{index:e,file:i,bitmap:c,fileId:t,type:r,quality:f,demandThumbnail:p,isSingleImage:b,webkitRelativePath:d,maxSize:P}=a,n=d||i.webkitRelativePath||i.name,M=i.size;let s,g,z,w,B=!1;try{g=c}catch{s={action:"file-error",path:n,fileId:t,index:e},self.postMessage(s);return}let v;if(p){const u={resizeHeight:80};v=await createImageBitmap(g,{...u,resizeQuality:"pixelated"})}x.transferFromImageBitmap(g),s={action:"file-load",fileId:t,path:n,index:e,thumbnail:v,width:z,height:w,shrinked:B},self.postMessage(s);let m;try{m=await o.convertToBlob({type:r,quality:f})}catch{s={action:"file-error",path:n,fileId:t,index:e},self.postMessage(s);return}const y=m.size;l.postMessage({blob:m,path:n,fileId:t}),s={action:"file-converted",path:n,fileId:t,index:e,outputsize:y,inputsize:M,width:z,height:w},self.postMessage(s),h.set(t,{outputsize:y,inputsize:M,path:n,index:e})}const k=a=>{const{fileId:e,renamed:i,outputPath:c,canceled:t}=a.data,{inputsize:r,outputsize:f,path:p,index:b}=h.get(e),d={action:t?"file-canceled":"file-completed",fileId:e,path:p,index:b,inputsize:r,outputsize:f};self.postMessage(d)}})();
